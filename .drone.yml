---
kind: pipeline
type: docker
name: compliance

platform:
  os: linux
  arch: amd64

trigger:
  event:
    - push
    - tag
    - pull_request

volumes:
  - name: deps
    temp: {}

steps:
  - name: deps-backend
    image: golang:1.18
    pull: always
    commands:
      - make deps-backend
    volumes:
      - name: deps
        path: /go

  - name: prepare-test-env
    image: gitea/test_env:linux-amd64  # https://gitea.com/gitea/test-env
    pull: always
    commands:
      - ./build/test-env-prepare.sh

  - name: build
    image: gitea/test_env:linux-amd64  # https://gitea.com/gitea/test-env
    user: gitea
    commands:
      - ./build/test-env-check.sh
      - make backend
    environment:
      GOPROXY: https://goproxy.io
      GOSUMDB: sum.golang.org
      TAGS: bindata sqlite sqlite_unlock_notify
    volumes:
      - name: deps
        path: /go

  - name: test-special
    image: gitea/test_env:linux-amd64
    user: gitea
    commands:
      - git config --global --add safe.directory /drone/src
      - make "test-sqlite#TestRepoLanguages"
    environment:
      GOPROXY: https://goproxy.io
      TAGS: sqlite sqlite_unlock_notify
      RACE_ENABLED: true
      TEST_TAGS: sqlite sqlite_unlock_notify
      USE_REPO_TEST_DIR: 1
    volumes:
      - name: deps
        path: /go
