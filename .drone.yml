---
kind: pipeline
name: testing-arm64

platform:
  os: linux
  arch: arm64

depends_on:
  - compliance

workspace:
  base: /go
  path: src/code.gitea.io/gitea

  - name: ldap
    pull: default
    image: gitea/test-openldap:latest

steps:
  - name: fetch-tags
    pull: default
    image: docker:git
    commands:
      - git fetch --tags --force
    when:
      event:
        exclude:
          - pull_request

  - name: build
    pull: always
    image: golang:1.14
    commands:
      - curl -sL https://deb.nodesource.com/setup_12.x | bash - && apt -y install nodejs
      - make build
    environment:
      GOPROXY: https://goproxy.cn # proxy.golang.org is blocked in China, this proxy is not
      GOSUMDB: sum.golang.org
      TAGS: bindata sqlite sqlite_unlock_notify

  - name: test-sqlite TestAPIDeleteFile
    pull: always
    image: golang:1.14
    commands:
      - "curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash"
      - apt-get install -y git-lfs
      - timeout -s ABRT 40m make test-sqlite-migration test-sqlite#TestAPIDeleteFile
    environment:
      GOPROXY: off
      TAGS: bindata
      USE_REPO_TEST_DIR: 1
    depends_on:
      - build

---
kind: pipeline
name: translations

platform:
  os: linux
  arch: arm64

workspace:
  base: /go
  path: src/code.gitea.io/gitea

trigger:
  branch:
    - master
  event:
    - push

steps:
  - name: download
    pull: always
    image: jonasfranz/crowdin
    settings:
      download: true
      export_dir: options/locale/
      ignore_branch: true
      project_identifier: gitea
    environment:
      CROWDIN_KEY:
        from_secret: crowdin_key

  - name: update
    pull: default
    image: alpine:3.11
    commands:
      - ./build/update-locales.sh

  - name: push
    pull: always
    image: appleboy/drone-git-push
    settings:
      author_email: "teabot@gitea.io"
      author_name: GiteaBot
      commit: true
      commit_message: "[skip ci] Updated translations via Crowdin"
      remote: "git@github.com:go-gitea/gitea.git"
    environment:
      GIT_PUSH_SSH_KEY:
        from_secret: git_push_ssh_key

  - name: upload_translations
    pull: always
    image: jonasfranz/crowdin
    settings:
      files:
        locale_en-US.ini: options/locale/locale_en-US.ini
      ignore_branch: true
      project_identifier: gitea
    environment:
      CROWDIN_KEY:
        from_secret: crowdin_key

---
kind: pipeline
name: release-latest

platform:
  os: linux
  arch: amd64

workspace:
  base: /go
  path: src/code.gitea.io/gitea

trigger:
  branch:
    - master
    - "release/*"
  event:
    - push

depends_on:
  - testing-amd64
  - testing-arm64
  - translations

steps:
  - name: fetch-tags
    pull: default
    image: docker:git
    commands:
      - git fetch --tags --force

  - name: static
    pull: always
    image: techknowlogick/xgo:go-1.14.x
    commands:
      - apt update && apt -y install curl
      - curl -sL https://deb.nodesource.com/setup_12.x | bash - && apt -y install nodejs
      - export PATH=$PATH:$GOPATH/bin
      - make release
    environment:
      GOPROXY: https://goproxy.cn # proxy.golang.org is blocked in China, this proxy is not
      TAGS: bindata sqlite sqlite_unlock_notify

  - name: gpg-sign
    pull: always
    image: plugins/gpgsign:1
    settings:
      detach_sign: true
      excludes:
        - "dist/release/*.sha256"
      files:
        - "dist/release/*"
    environment:
      GPGSIGN_KEY:
        from_secret: gpgsign_key
      GPGSIGN_PASSPHRASE:
        from_secret: gpgsign_passphrase

  - name: release-branch
    pull: always
    image: plugins/s3:1
    settings:
      acl: public-read
      bucket: releases
      endpoint: https://storage.gitea.io
      path_style: true
      source: "dist/release/*"
      strip_prefix: dist/release/
      target: "/gitea/${DRONE_BRANCH##release/v}"
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
    when:
      branch:
        - "release/*"
      event:
        - push

  - name: release-master
    pull: always
    image: plugins/s3:1
    settings:
      acl: public-read
      bucket: releases
      endpoint: https://storage.gitea.io
      path_style: true
      source: "dist/release/*"
      strip_prefix: dist/release/
      target: /gitea/master
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
    when:
      branch:
        - master
      event:
        - push

---
kind: pipeline
name: release-version

platform:
  os: linux
  arch: amd64

workspace:
  base: /go
  path: src/code.gitea.io/gitea

trigger:
  event:
    - tag

depends_on:
  - testing-arm64
  - testing-amd64

steps:
  - name: fetch-tags
    pull: default
    image: docker:git
    commands:
      - git fetch --tags --force

  - name: static
    pull: always
    image: techknowlogick/xgo:go-1.14.x
    commands:
      - apt update && apt -y install curl
      - curl -sL https://deb.nodesource.com/setup_12.x | bash - && apt -y install nodejs
      - export PATH=$PATH:$GOPATH/bin
      - make release
    environment:
      GOPROXY: https://goproxy.cn # proxy.golang.org is blocked in China, this proxy is not
      TAGS: bindata sqlite sqlite_unlock_notify

  - name: gpg-sign
    pull: always
    image: plugins/gpgsign:1
    settings:
      detach_sign: true
      excludes:
        - "dist/release/*.sha256"
      files:
        - "dist/release/*"
    environment:
      GPGSIGN_KEY:
        from_secret: gpgsign_key
      GPGSIGN_PASSPHRASE:
        from_secret: gpgsign_passphrase

  - name: release-tag
    pull: always
    image: plugins/s3:1
    settings:
      acl: public-read
      bucket: releases
      endpoint: https://storage.gitea.io
      path_style: true
      source: "dist/release/*"
      strip_prefix: dist/release/
      target: "/gitea/${DRONE_TAG##v}"
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key

  - name: github
    pull: always
    image: plugins/github-release:1
    settings:
      files:
        - "dist/release/*"
    environment:
      GITHUB_TOKEN:
        from_secret: github_token

---
kind: pipeline
name: docs

platform:
  os: linux
  arch: arm64

depends_on:
  - compliance

steps:
  - name: build-docs
    pull: always
    image: plugins/hugo:latest
    commands:
      - apk add --no-cache make bash curl
      - cd docs
      - make trans-copy clean build

  - name: publish-docs
    pull: always
    image: techknowlogick/drone-netlify:latest
    settings:
      path: docs/public/
      site_id: d2260bae-7861-4c02-8646-8f6440b12672
    environment:
      NETLIFY_TOKEN:
        from_secret: netlify_token
    when:
      branch:
        - master
      event:
        - push

---
kind: pipeline
name: docker-linux-amd64-release

platform:
  os: linux
  arch: amd64

workspace:
  base: /go
  path: src/code.gitea.io/gitea

depends_on:
  - testing-amd64
  - testing-arm64

trigger:
  ref:
  - refs/heads/master
  - "refs/tags/**"

steps:
  - name: fetch-tags
    pull: default
    image: docker:git
    commands:
      - git fetch --tags --force

  - name: publish
    pull: always
    image: plugins/docker:linux-amd64
    settings:
      auto_tag: true
      auto_tag_suffix: linux-amd64
      repo: gitea/gitea
      build_args:
        - GOPROXY=off
      password:
        from_secret: docker_password
      username:
        from_secret: docker_username
    when:
      event:
        exclude:
        - pull_request

---
kind: pipeline
name: docker-linux-arm64-dry-run

platform:
  os: linux
  arch: arm64

workspace:
  base: /go
  path: src/code.gitea.io/gitea

depends_on:
  - compliance

trigger:
  ref:
  - "refs/pull/**"

steps:
  - name: dryrun
    pull: always
    image: plugins/docker:linux-arm64
    settings:
      dry_run: true
      repo: gitea/gitea
      tags: linux-arm64
      build_args:
        - GOPROXY=off
    when:
      event:
        - pull_request

---
kind: pipeline
name: docker-linux-arm64-release

platform:
  os: linux
  arch: arm64

workspace:
  base: /go
  path: src/code.gitea.io/gitea

depends_on:
  - testing-amd64
  - testing-arm64

trigger:
  ref:
  - refs/heads/master
  - "refs/tags/**"
steps:
  - name: fetch-tags
    pull: default
    image: docker:git
    commands:
      - git fetch --tags --force

  - name: publish
    pull: always
    image: plugins/docker:linux-arm64
    settings:
      auto_tag: true
      auto_tag_suffix: linux-arm64
      repo: gitea/gitea
      build_args:
        - GOPROXY=off
      password:
        from_secret: docker_password
      username:
        from_secret: docker_username
    when:
      event:
        exclude:
        - pull_request

---
kind: pipeline
name: docker-manifest

platform:
  os: linux
  arch: amd64

steps:
  - name: manifest
    pull: always
    image: plugins/manifest
    settings:
      auto_tag: true
      ignore_missing: true
      spec: docker/manifest.tmpl
      password:
        from_secret: docker_password
      username:
        from_secret: docker_username

trigger:
  ref:
  - refs/heads/master
  - "refs/tags/**"

depends_on:
  - docker-linux-amd64-release
  - docker-linux-arm64-release

---
kind: pipeline
name: notifications

platform:
  os: linux
  arch: arm64

clone:
  disable: true

trigger:
  branch:
    - master
    - "release/*"
  event:
    - push
    - tag
  status:
    - success
    - failure

depends_on:
  - testing-amd64
  - testing-arm64
  - translations
  - release-version
  - release-latest
  - docker-linux-amd64-release
  - docker-linux-arm64-release
  - docker-manifest
  - docs

steps:
  - name: discord
    pull: always
    image: appleboy/drone-discord:1.2.4
    settings:
      message: "{{#success build.status}} ✅  Build #{{build.number}} of `{{repo.name}}` succeeded.\n\n📝 Commit by {{commit.author}} on `{{commit.branch}}`:\n``` {{commit.message}} ```\n\n🌐 {{ build.link }} {{else}} ❌  Build #{{build.number}} of `{{repo.name}}` failed.\n\n📝 Commit by {{commit.author}} on `{{commit.branch}}`:\n``` {{commit.message}} ```\n\n🌐 {{ build.link }} {{/success}}\n"
      webhook_id:
        from_secret: discord_webhook_id
      webhook_token:
        from_secret: discord_webhook_token
