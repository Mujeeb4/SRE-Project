name: Compliance

on: [pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '>=1.20'
          check-latest: true
      - name: deps-backend
        run: make deps-backend deps-tools
      - name: lint backend
        run: make lint-backend
        env:
          GOPROXY: https://goproxy.io # proxy.golang.org is blocked in China, this proxy is not
          GOSUMDB: sum.golang.org
          TAGS: bindata sqlite sqlite_unlock_notify
  lint-go-windows:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '>=1.20'
          check-latest: true
      - name: deps-backend
        run: make deps-backend deps-tools
      - name: lint-go-windows
        run: make lint-go-windows lint-go-vet
        env:
          GOPROXY: https://goproxy.io # proxy.golang.org is blocked in China, this proxy is not
          GOSUMDB: sum.golang.org
          TAGS: bindata sqlite sqlite_unlock_notify
          GOOS: windows
          GOARCH: amd64
  lint-go-gogit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '>=1.20'
          check-latest: true
      - name: deps-backend
        run: make deps-backend deps-tools
      - name: lint-go-gogit
        run: make lint-go
        env:
          GOPROXY: https://goproxy.io # proxy.golang.org is blocked in China, this proxy is not
          GOSUMDB: sum.golang.org
          TAGS: bindata gogit sqlite sqlite_unlock_notify
  checks-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '>=1.20'
          check-latest: true
      - name: deps-backend
        run: make deps-backend deps-tools
      - name: checks backend
        run: make --always-make checks-backend # ensure the 'go-licenses' make target runs
  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: make deps-frontend
      - run: make lint-frontend
      - run: make checks-frontend
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '>=1.20'
          check-latest: true
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: make deps-backend deps-tools
      - run: make deps-frontend
      - run: make frontend
      - run: go build -o gitea_no_gcc # test if build succeeds without the sqlite tag
        env:
          GOPROXY: https://goproxy.io
      - name: build-backend-arm64
        run: make backend # test cross compile
        env:
          GOPROXY: https://goproxy.io
          GOOS: linux
          GOARCH: arm64
          TAGS: bindata gogit
      - name: build-backend-windows
        run: go build -o gitea_windows
        env:
          GOPROXY: https://goproxy.io
          GOOS: windows
          GOARCH: amd64
          TAGS: bindata gogit
      - name: build-backend-386
        run: go build -o gitea_linux_386 # test if compatible with 32 bit
        env:
          GOPROXY: https://goproxy.io
          GOOS: linux
          GOARCH: 386
