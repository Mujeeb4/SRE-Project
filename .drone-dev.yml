---
kind: pipeline
name: testing-amd64

platform:
  os: linux
  arch: amd64

depends_on:
  - compliance

trigger:
  event:
    - push
    - tag
    - pull_request

services:
  - name: mysql
    image: mysql:5.7
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: yes
      MYSQL_DATABASE: test

  - name: mysql8
    image: mysql:8.0
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: yes
      MYSQL_DATABASE: testgitea

  - name: mssql
    image: mcr.microsoft.com/mssql/server:latest
    environment:
      ACCEPT_EULA: Y
      MSSQL_PID: Standard
      SA_PASSWORD: MwantsaSecurePassword1

  - name: ldap
    image: gitea/test-openldap:latest

  - name: elasticsearch
    environment:
      discovery.type: single-node
    image: elasticsearch:7.5.0

  - name: minio
    image: minio/minio:RELEASE.2021-03-12T00-00-47Z
    commands:
    - minio server /data
    environment:
      MINIO_ACCESS_KEY: 123456
      MINIO_SECRET_KEY: 12345678

steps:
  - name: fetch-tags
    image: docker:git
    commands:
      - git fetch --tags --force
    when:
      event:
        exclude:
          - pull_request

  - name: build
    pull: always
    image: golang:1.16
    commands:
      - make backend
    environment:
      GOPROXY: off
      GOSUMDB: sum.golang.org
      TAGS: bindata sqlite sqlite_unlock_notify

  - name: tag-pre-condition
    pull: always
    image: drone/git
    commands:
      - git update-ref refs/heads/tag_test ${DRONE_COMMIT_SHA}

  - name: unit-test
    image: golang:1.16
    commands:
      - make unit-test-coverage test-check
    environment:
      GOPROXY: off
      TAGS: bindata sqlite sqlite_unlock_notify
      GITHUB_READ_TOKEN:
        from_secret: github_read_token

  - name: unit-test-gogit
    pull: always
    image: golang:1.16
    commands:
      - make unit-test-coverage test-check
    environment:
      GOPROXY: off
      TAGS: bindata gogit sqlite sqlite_unlock_notify
      GITHUB_READ_TOKEN:
        from_secret: github_read_token

  - name: test-mysql
    image: gitea/test_env:linux-amd64  # https://gitea.com/gitea/test-env
    commands:
      - make test-mysql-migration integration-test-coverage
    environment:
      GOPROXY: off
      TAGS: bindata
      TEST_LDAP: 1
      USE_REPO_TEST_DIR: 1
      TEST_INDEXER_CODE_ES_URL: "http://elastic:changeme@elasticsearch:9200"
    depends_on:
      - build

  - name: test-mysql8
    image: gitea/test_env:linux-amd64  # https://gitea.com/gitea/test-env
    commands:
      - timeout -s ABRT 40m make test-mysql8-migration test-mysql8
    environment:
      GOPROXY: off
      TAGS: bindata
      TEST_LDAP: 1
      USE_REPO_TEST_DIR: 1
    depends_on:
      - build

  - name: test-mssql
    image: gitea/test_env:linux-amd64  # https://gitea.com/gitea/test-env
    commands:
      - make test-mssql-migration test-mssql
    environment:
      GOPROXY: off
      TAGS: bindata
      TEST_LDAP: 1
      USE_REPO_TEST_DIR: 1
    depends_on:
      - build

  - name: generate-coverage
    image: golang:1.16
    commands:
      - make coverage
    environment:
      GOPROXY: off
      TAGS: bindata
    depends_on:
      - unit-test
      - test-mysql
    when:
      branch:
        - master
      event:
        - push
        - pull_request

  - name: coverage-codecov
    pull: always
    image: plugins/codecov
    settings:
      files:
        - coverage.all
      token:
        from_secret: codecov_token
    depends_on:
      - generate-coverage
    when:
      branch:
        - master
      event:
        - push
        - pull_request

---
kind: pipeline
name: release-latest

platform:
  os: linux
  arch: amd64

workspace:
  base: /source
  path: /

trigger:
  branch:
    - master
    - "release/*"
  event:
    - push

depends_on:
  - testing-amd64

steps:
  - name: fetch-tags
    image: docker:git
    commands:
      - git fetch --tags --force

  - name: static
    pull: always
    image: techknowlogick/xgo:go-1.16.x
    commands:
      - curl -sL https://deb.nodesource.com/setup_14.x | bash - && apt-get install -y nodejs
      - export PATH=$PATH:$GOPATH/bin
      - make release
    environment:
      GOPROXY: https://goproxy.cn # proxy.golang.org is blocked in China, this proxy is not
      TAGS: bindata sqlite sqlite_unlock_notify

  - name: gpg-sign
    pull: always
    image: plugins/gpgsign:1
    settings:
      detach_sign: true
      excludes:
        - "dist/release/*.sha256"
      files:
        - "dist/release/*"
    environment:
      GPGSIGN_KEY:
        from_secret: gpgsign_key
      GPGSIGN_PASSPHRASE:
        from_secret: gpgsign_passphrase

  - name: release-branch
    pull: always
    image: plugins/s3:1
    settings:
      acl: public-read
      bucket: releases
      endpoint: https://storage.gitea.io
      path_style: true
      source: "dist/release/*"
      strip_prefix: dist/release/
      target: "/gitea/${DRONE_BRANCH##release/v}"
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
    when:
      branch:
        - "release/*"
      event:
        - push

  - name: release-master
    image: plugins/s3:1
    settings:
      acl: public-read
      bucket: releases
      endpoint: https://storage.gitea.io
      path_style: true
      source: "dist/release/*"
      strip_prefix: dist/release/
      target: /gitea/master
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
    when:
      branch:
        - master
      event:
        - push

---
kind: pipeline
name: release-version

platform:
  os: linux
  arch: amd64

workspace:
  base: /source
  path: /

trigger:
  event:
    - tag

depends_on:
  - testing-amd64

steps:
  - name: fetch-tags
    pull: default
    image: docker:git
    commands:
      - git fetch --tags --force

  - name: static
    pull: always
    image: techknowlogick/xgo:go-1.16.x
    commands:
      - curl -sL https://deb.nodesource.com/setup_14.x | bash - && apt-get install -y nodejs
      - export PATH=$PATH:$GOPATH/bin
      - make release
    environment:
      GOPROXY: https://goproxy.cn # proxy.golang.org is blocked in China, this proxy is not
      TAGS: bindata sqlite sqlite_unlock_notify

  - name: gpg-sign
    pull: always
    image: plugins/gpgsign:1
    settings:
      detach_sign: true
      excludes:
        - "dist/release/*.sha256"
      files:
        - "dist/release/*"
    environment:
      GPGSIGN_KEY:
        from_secret: gpgsign_key
      GPGSIGN_PASSPHRASE:
        from_secret: gpgsign_passphrase

  - name: release-tag
    pull: always
    image: plugins/s3:1
    settings:
      acl: public-read
      bucket: releases
      endpoint: https://storage.gitea.io
      path_style: true
      source: "dist/release/*"
      strip_prefix: dist/release/
      target: "/gitea/${DRONE_TAG##v}"
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key

  - name: github
    pull: always
    image: plugins/github-release:1
    settings:
      files:
        - "dist/release/*"
    environment:
      GITHUB_TOKEN:
        from_secret: github_token

---
kind: pipeline
name: docker-linux-amd64-release

platform:
  os: linux
  arch: amd64

depends_on:
  - testing-amd64

trigger:
  ref:
  - refs/heads/master
  - "refs/tags/**"
  event:
    exclude:
    - cron

steps:
  - name: fetch-tags
    image: docker:git
    commands:
      - git fetch --tags --force

  - name: publish
    pull: always
    image: plugins/docker:linux-amd64
    settings:
      auto_tag: true
      auto_tag_suffix: linux-amd64
      repo: gitea/gitea
      build_args:
        - GOPROXY=off
      password:
        from_secret: docker_password
      username:
        from_secret: docker_username
    when:
      event:
        exclude:
        - pull_request

  - name: publish-rootless
    image: plugins/docker:linux-amd64
    settings:
      dockerfile: Dockerfile.rootless
      auto_tag: true
      auto_tag_suffix: linux-amd64-rootless
      repo: gitea/gitea
      build_args:
        - GOPROXY=off
      password:
        from_secret: docker_password
      username:
        from_secret: docker_username
    environment:
      PLUGIN_MIRROR:
        from_secret: plugin_mirror
    when:
      event:
        exclude:
        - pull_request

---
kind: pipeline
name: docker-manifest

platform:
  os: linux
  arch: amd64

steps:
  - name: manifest-rootless
    pull: always
    image: plugins/manifest
    settings:
      auto_tag: true
      ignore_missing: true
      spec: docker/manifest.rootless.tmpl
      password:
        from_secret: docker_password
      username:
        from_secret: docker_username

  - name: manifest
    image: plugins/manifest
    settings:
      auto_tag: true
      ignore_missing: true
      spec: docker/manifest.tmpl
      password:
        from_secret: docker_password
      username:
        from_secret: docker_username

trigger:
  ref:
  - refs/heads/master
  - "refs/tags/**"
  event:
    exclude:
    - cron

depends_on:
  - docker-linux-amd64-release
